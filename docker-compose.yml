services:  
  
  # WEB      
  cnot_webserver:       
    build:
      context: . # Use the current directory as the build context
      dockerfile: Dockerfile # Specify the Dockerfile to use
    restart: always      
    depends_on:
      - cnot_dbserver
    environment:
      MYSQL_HOST: cnot_dbserver
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}  
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      JOURNAL_NAME: ${JOURNAL_NAME}
      APP_PASSWORD: ${APP_PASSWORD}
    volumes:
      - "${ENTRIES_DATA_PATH}:/var/www/html/entries"
    command: /bin/sh -c "chown -R www-data:www-data /var/www/html/entries && apache2-foreground"
    networks:
      - cnot_internal_net # Connection with other services in this stack 
      - cnot_npm_net  # Connection with NPM
    ports:
      - "${HTTP_WEBSERVER_PORT:-}"  # No port exposed by default (if empty or commented)

  # DATABASE
  cnot_dbserver:
    image: mysql
    restart: always
    volumes:
      - "${DB_DATA_PATH}:/var/lib/mysql"
    environment:
      MYSQL_USER: ${MYSQL_USER}  
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}  
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    networks:
      - cnot_internal_net # Connection with other services in this stack 

  # PHPMYADMIN
  cnot_phpmyadmin:
    image: phpmyadmin
    depends_on:
      - cnot_dbserver
    environment:
      PMA_HOST: cnot_dbserver
      UPLOAD_LIMIT: 250M
    restart: always
    networks:
      - cnot_internal_net # Connection with other services in this stack 
      - cnot_npm_net  # Connection with NPM
    ports:
      - "${HTTP_PHPMYADMIN_PORT:-}"  # No port exposed by default (if empty or commented)

networks:
  cnot_internal_net:  # Network specific to this stack
    driver: bridge
  cnot_npm_net:  # Network defined in NPM docker-compose.yml
    name: cnot_npm_net  # Docker will bind this service to the network without needing to create it manually
