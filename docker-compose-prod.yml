services:  
  
  # WEB      
  webserver-prod:       
    build:
      context: . # Use the current directory as the build context
      dockerfile: Dockerfile # Specify the Dockerfile to use
    restart: unless-stopped      
    depends_on:
      dbserver-prod:
        condition: service_healthy
    environment:
      MYSQL_HOST: dbserver-prod
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_DATABASE: ${MYSQL_DATABASE}  
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      JOURNAL_NAME: ${JOURNAL_NAME}
    ports:
      - "${HTTP_WEB_PORT_PROD}:80"
    volumes:
      - "${ENTRIES_DATA_PATH_PROD}:/var/www/html/entries"
      - "${ATTACHMENTS_DATA_PATH_PROD}:/var/www/html/attachments"
    command: /bin/sh -c "chown -R www-data:www-data /var/www/html/entries /var/www/html/attachments && apache2-foreground"

  # DATABASE
  dbserver-prod:
    image: mysql:9.3.0
    restart: unless-stopped
    volumes:
      - "${DB_DATA_PATH_PROD}:/var/lib/mysql"
    environment:
      MYSQL_USER: ${MYSQL_USER}  
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}  
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      interval: 10s
      retries: 10
      start_period: 40s

  # PHPMYADMIN (PMA)
  pma-prod:
    image: phpmyadmin:5.2.2
    depends_on:
      dbserver-prod:
        condition: service_healthy
    environment:
      PMA_HOST: dbserver-prod
      UPLOAD_LIMIT: 250M
    ports:
      - "${HTTP_PMA_PORT_PROD}:80"
    restart: unless-stopped
