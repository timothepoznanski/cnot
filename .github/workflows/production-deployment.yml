name: Production Deployment

on:
  push:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/cnot:${{ github.sha }}
          ${{ secrets.DOCKER_USERNAME }}/cnot:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
    - name: Deploy to production server
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.PROD_HOST }}
        username: ${{ secrets.PROD_USERNAME }}
        key: ${{ secrets.PROD_SSH_KEY }}
        passphrase: ${{ secrets.PROD_SSH_PASSPHRASE }}
        port: ${{ secrets.PROD_PORT || 22 }}
        script: |
          set -e
          echo "ðŸš€ Starting production deployment..."
          
          cd ${{ secrets.PROD_PROJECT_PATH || '/root/cnot/cnot' }}
          
          # Pull the new image
          IMAGE_TAG="${{ secrets.DOCKER_USERNAME }}/cnot:${{ github.sha }}"
          echo "ðŸ“¥ Pulling new Docker image: $IMAGE_TAG"
          docker pull $IMAGE_TAG
          
          # Deploy to production
          echo "ðŸ”„ Updating production services..."
          DOCKER_IMAGE=$IMAGE_TAG docker compose -f docker-compose.yml -f docker-compose-reverse-proxy.yml up -d --force-recreate
          
          echo "ðŸ§¹ Cleaning up old images..."
          docker image prune -f
          
          echo "âœ… Production deployment completed!"
          echo "ðŸ“Š Deployed version: ${{ github.sha }}"
